<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    https://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security.xsd">

	<beans:bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<http pattern="/member/toMailSend" security="none"></http>
	<http pattern="/member/emailCheck" security="none"></http>
	<http pattern="/member/nicknameCheck" security="none"></http>
	<http pattern="/resources/**" security="none"></http>
	<http auto-config="true" use-expressions="true">

		<intercept-url pattern="/test/**"
			access="isAuthenticated()" />
		<intercept-url pattern="/record/**" access="permitAll" />
		<intercept-url pattern="/duo/**" access="permitAll" />
		<intercept-url pattern="/member/toSignIn" access="permitAll" />
		<intercept-url pattern="/member/signIn" access="permitAll" />
		<intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN')" />

		<!-- 로그인 폼 -->
		<form-login login-page="/member/toSignIn"
			login-processing-url="/member/signIn"
			authentication-success-handler-ref="userLoginSuccessHandler"
			authentication-failure-handler-ref="userLoginFailureHandler"
			username-parameter="email" password-parameter="password" />

		<!-- <session-management> <concurrency-control max-sessions="1" expired-url="/member/toSignIn" 
			error-if-maximum-exceeded="true" /> </session-management> -->
		
		<!-- 로그아웃 폼 -->
		<logout logout-url="/member/signOut"
			logout-success-url="/member/toSignIn"
			delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"
			invalidate-session="true" />

		<!-- 접근권한이 없는 경우의 코드 -->
		<access-denied-handler ref="userDeniedHandler" />

	</http>

	<beans:bean id="userDeniedHandler"
		class="wm.spring.security.service.UserDeniedHandler" />
	<beans:bean id="userLoginSuccessHandler"
		class="wm.spring.security.service.UserLoginSuccessHandler" />
	<beans:bean id="userLoginFailureHandler"
		class="wm.spring.security.service.UserLoginFailureHandler" />

	<!-- 로그인 인증 처리 -->
	<beans:bean id="userService"
		class="wm.spring.security.service.UserAuthenticationService">
		<beans:constructor-arg name="sqlSession"
			ref="sqlSession" />
	</beans:bean>

	<!-- 사용자가 입력한 비밀번호를 암호화된 비밀번호화 비교 -->
	<authentication-manager>
		<authentication-provider
			user-service-ref="userService">
			<password-encoder ref="bcryptPasswordEncoder" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>